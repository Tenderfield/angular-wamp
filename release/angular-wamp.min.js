if("undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports){var autobahn=require("autobahn");module.exports="vxWamp"}!function(){"use strict";function a(){var a;this.init=function(b){a=b||{}};var b=this.interceptors=[];return this.$get=["$rootScope","$q","$log","$injector",function(c,d,e,f){function g(b){return a.disable_digest&&a.disable_digest===!0?b:function(){var a=b.apply(this,arguments);return c.$apply(),a}}var h,i=d.defer(),j=i.promise,k={onchallenge:g(l),use_deferred:d.defer,prefix:"$wamp"};a=angular.extend(k,a);var l=function(b,e,f){var g=d.defer();return c.$broadcast(a.prefix+".onchallenge",{promise:g,session:b,method:e,extra:f}),g.promise},m=[];angular.forEach(b,function(a){m.unshift(angular.isString(a)?f.get(a):f.invoke(a))}),h=new autobahn.Connection(a),h.onopen=g(function(b,d){e.debug("Congrats!  You're connected to the WAMP server!"),c.$broadcast(a.prefix+".open",{session:b,details:d}),i.resolve()}),h.onclose=g(function(b,d){e.debug("Connection Closed: ",b,d);for(var f in h.session._call_reqs)if(h.session._call_reqs.hasOwnProperty(f)){var g=new Error("Connection Closed"),i=h.session._call_reqs[f];i[0].reject(g)}c.$broadcast(a.prefix+".close",{reason:b,details:d})});var n=function(a,b,e,f){var i,j,k={},l=d.defer();return b=g(b),j=function(){var c=h.session.subscribe(a,b,e).then(function(a){return k.hasOwnProperty("id")&&delete k.id,k=angular.extend(a,k),l.resolve(k),a});f&&f(c)},h.isOpen&&j(),i=c.$on(e.prefix+".open",j),k.promise=l.promise,k.unsubscribe=function(){return i(),h.session.unsubscribe(k)},k.promise},o=function(b,c,f){var g=function(a){return{result:a,type:b,args:c}},h=function(f){return e.error(a.prefix+" error",{type:b,arguments:c,error:f}),d.reject({error:f,type:b,args:c})},i=j.then(function(){return f()}),k=[g,h];for(angular.forEach(m,function(a){(a[b+"Response"]||a[b+"ResponseError"])&&k.push(a[b+"Response"],a[b+"ResponseError"])}),k.push(function(a){return a.result},function(a){return d.reject(a.error)});k.length;){var l=k.shift(),n=k.shift();i=i.then(l,n)}return i};return{connection:h,open:function(){a.authmethods&&-1!==a.authmethods.indexOf("wampcra")&&!a.authid?e.debug("You're using WAMP CRA.  The authid must be set on $wamp before the connection can be opened, ie: $wamp.setAuthId('john.doe')"):h.open()},setAuthId:function(b,c){a.authid=b,c&&h.open()},close:function(){h.close()},subscribe:function(a,b,c,d){return o("subscribe",arguments,function(){return n(a,b,c,d)})},subscribeOnScope:function(a,b,c){return this.subscribe(b,c).then(function(b){a.$on("$destroy",function(){return b.unsubscribe()})})},unsubscribe:function(a){return o("unsubscribe",arguments,function(){return a.unsubscribe()})},publish:function(a,b,c,d){return o("publish",arguments,function(){return h.session.publish(a,b,c,d)})},register:function(a,b,c){return b=g(b),o("register",arguments,function(){return h.session.register(a,b,c)})},unregister:function(a){return o("unregister",arguments,function(){return a.unregister()})},call:function(a,b,c,d){return o("call",arguments,function(){return h.session.call(a,b,c,d)})}}}],this}angular.module("vxWamp",[]).provider("$wamp",a)}();